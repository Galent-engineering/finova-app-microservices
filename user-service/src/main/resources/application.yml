server:
  port: 8081

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:h2:mem:user_service_db
    driverClassName: org.h2.Driver
    username: sa
    password: 
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    format-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  # Spring Security OAuth 2.0 Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          # Keycloak configuration for demo
          issuer-uri: http://localhost:9080/realms/finova
          jwk-set-uri: http://localhost:9080/realms/finova/protocol/openid-connect/certs

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always

# Temporary JWT Configuration (for legacy compatibility)
jwt:
  secret: finova-retirement-secret-key-2023-microservices-jwt-token
  expiration: 86400000 # 24 hours

# Finova Configuration
finova:
  # Security Configuration
  security:
    # Set to true when you have OAuth 2.0 provider configured
    oauth:
      enabled: true  # SSO ENABLED - Keycloak configuration
    cors:
      allowed-origins: "http://localhost:3000,http://localhost:8000,http://localhost:8080,http://localhost:4200,https://*.finova.com"
    public-paths:
      - /actuator/**
      - /api/users/health
      - /api/auth/health
      - /error
      - /h2-console/**
    jwt:
      clock-skew: 60  # seconds
      cache-duration: 300  # seconds

logging:
  level:
    com.finova.user: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.cors: DEBUG
