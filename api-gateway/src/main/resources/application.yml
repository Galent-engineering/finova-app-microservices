server:
  port: 9080

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # User Service Routes with Load Balancing
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**,/api/auth/**
          filters:
            - AddRequestHeader=X-Request-Source, api-gateway
            - AddResponseHeader=X-Response-Time, gateway-response

        # Account Service Routes with Load Balancing
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/accounts/**,/api/contributions/**,/api/income-sources/**,/api/dashboard/**
          filters:
            - AddRequestHeader=X-Request-Source, api-gateway
            - AddResponseHeader=X-Response-Time, gateway-response

        # Planning Service Routes with Load Balancing
        - id: planning-service
          uri: lb://planning-service
          predicates:
            - Path=/api/planning/**,/api/calculators/**
          filters:
            - AddRequestHeader=X-Request-Source, api-gateway
            - AddResponseHeader=X-Response-Time, gateway-response
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Gateway-Response, api-gateway
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedOrigins:
              - "http://localhost:8000"
              - "http://127.0.0.1:8000"
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
              - HEAD
            allowedHeaders:
              - "*"
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
              - "Accept"
              - "Origin"
              - "Access-Control-Request-Method"
              - "Access-Control-Request-Headers"
            exposedHeaders:
              - "X-Gateway-Response"
              - "X-Response-Time"
              - "X-Request-Source"
            allowCredentials: true
            maxAge: 3600

# Enable Eureka for service discovery
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: false
    fetch-registry: true
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,prometheus
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Simplified Gateway - no circuit breakers for now

# Redis Configuration for Rate Limiting (optional - disabled for now)

logging:
  level:
    com.finova.gateway: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.web.reactive: INFO
    org.springframework.cloud.loadbalancer: INFO
    com.netflix.eureka: WARN
    com.netflix.discovery: WARN
    reactor.netty.http.client: INFO
    # Enable for debugging
    # org.springframework.cloud.gateway.filter: DEBUG
    # org.springframework.cloud.gateway.route: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/api-gateway.log
    max-size: 10MB
    max-history: 30
